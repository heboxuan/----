<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.dao.county.FrontCityDao">
  <resultMap id="BaseResultMap" type="com.he.domain.county.FrontCity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ask_num" jdbcType="BIGINT" property="askNum" />
    <result column="response_num" jdbcType="BIGINT" property="responseNum" />
    <result column="is_delete" jdbcType="VARCHAR" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, ask_num, response_num, is_delete
  </sql>
  <select id="selectByExample" parameterType="com.he.domain.county.FrontCityExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from front_city
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from front_city
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from front_city
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.he.domain.county.FrontCity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into front_city (id, name, ask_num, 
      response_num, is_delete)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{askNum,jdbcType=BIGINT}, 
      #{responseNum,jdbcType=BIGINT}, #{isDelete,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.he.domain.county.FrontCity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into front_city
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="askNum != null">
        ask_num,
      </if>
      <if test="responseNum != null">
        response_num,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="askNum != null">
        #{askNum,jdbcType=BIGINT},
      </if>
      <if test="responseNum != null">
        #{responseNum,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.he.domain.county.FrontCity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update front_city
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="askNum != null">
        ask_num = #{askNum,jdbcType=BIGINT},
      </if>
      <if test="responseNum != null">
        response_num = #{responseNum,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.he.domain.county.FrontCity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update front_city
    set name = #{name,jdbcType=VARCHAR},
      ask_num = #{askNum,jdbcType=BIGINT},
      response_num = #{responseNum,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="totalMessageOne" resultType="map">
        SELECT
            id id,
            NAME name,
            ask_num askNum,
            response_num reNum
        FROM
            front_city
        where
            id=1 and is_delete="false"
    </select>

  <select id="totalMessageTwo" resultType="map">
        SELECT
            id id,
            NAME name,
            ask_num askNum,
            response_num reNum
        FROM
            front_city
        where
            id!=1 and is_delete="false"
    </select>

  <select id="totalMessageThree" resultType="map" parameterType="Long">
        SELECT
            id id,
            NAME name,
            ask_num askNum,
            response_num reNum
        FROM
            front_city
        where
            id=#{id} and is_delete="false"
    </select>

  <update id="updateById">

    UPDATE front_city SET ask_num =
    ( SELECT temp.result FROM ( SELECT ask_num + 1 result FROM front_city WHERE id = #{cityId} ) temp )
    WHERE
	id = #{cityId}
    </update>
</mapper>